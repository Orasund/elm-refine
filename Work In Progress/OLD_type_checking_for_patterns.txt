
Let S be a set of symbols.

D ⊆ S × T

# Type inference for pattern matching

match Bool with [[<bool>]] -> {}                                          [Bool]

match Int with [[<int>]] -> {}                                             [Int]

match ∀a.List a with [["[]"]] -> {}                                 [Empty List]

match t1 with [[<p:pattern>]] -> D1
match t2 with [["[" <l:list_pattern_list> "]"]] -> D2
t1 ⊑ t'   t2 ⊑ List t'
------------------------------------------------------------------------- [List]
match List t' with [["[" <p:pattern> "," <l:list_pattern_list> "]"]] -> D1 ∪ D2

match t1 with [[<p1:pattern>]] -> D1
match t2 with [[<p2:pattern>]] -> D2
-------------------------------------------------------------------      [Tuple]
match t1×t2 with [["(" <p1:pattern> , <p2:pattern> ")"]] -> D1 ∪ D2

I(v) = a
---------------------------------------                               [Variable]
match ∀a.a with [[<v:lower_var>]] -> {}

C(v) = t
------------------------------------                                  [Terminal]
match t with [[<v:upper_var>]] -> {}

D ⊢ [[<p1:pattern>]]:t1 -> t
D ⊢ [[<p2:pattern>]]:t2
t1 ⊑ t2
-----------------------------------------------                    [Application]
match t with [[<p1:pattern> <p2:pattern>]] -> D

match t with [[<p:pattern>]] -> D   I(v) = v'
---------------------------------------------------------------             [As]
match t with [[<p:pattern> "as" <v:lower_var>]] -> D ∪ {(v',t)}

match {} with [["{}"]] -> {}                                      [Empty Record]

k:\mathcal{N}_1^m->\mathcal{N}_1^n
k is injedctive
∀i\in\mathcal{N}_1^n.I(v_i)=l_(k(i))
D = ∪_{i\in\mathcal{N}_1^n} {(l_(k(i)),T_(k(i)))}
------------------------------------------------------------------------[Record]
match {l_1:T_1,..,l_n:T_n} with [["{" <v_1:lower_var> "," .. "," <v_m:lower_var> "}"]] -> D

match t1 with [[<p1:pattern>]] -> D1
match t2 with [[<p2:pattern>]] -> D2
t1 ⊑ t'   t2 ⊑ List t'
-----------------------------------------------------------------[Head and Tail]
match (t1 :: t2) with [[<p1:pattern> "::" <p2:pattern>]] -> D1 ∪ D2

match v with [["_"]] -> {}                                             [Wildcard]