<upper-letter>      ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I"
                      | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R"
                      | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<lower-letter>      ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i"
                      | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r"
                      | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<digit>             ::= "0" | "1" | "2" | "3" | "4"
                      | "5" | "6" | "7" | "8" | "9"

<symbol>            ::= <lower-letter> | <upper-letter> | <digit> | "-" | "-"

<lower-var>         ::= <lower-letter> | <lower-letter> <symbol>

<upper-var>         ::= <upper-letter> | <upper-letter> <symbol>

<list-lower-var>    ::= "" | <lower-var> | <lower-var> <list-lower-var>


<list-type-field>   ::= ""
                      | <lower-var> ":" <type>
                      | <lower-var> ":" <type> "," <list-type-field>

<list-type>         ::= "" | <type> | <type> <list-type>

<type>              ::= "Bool"
                      | "Int"
                      | "List" <TYPE>
                      | "(" <TYPE> "," <TYPE> ")"
                      | "{" <type-fields> "}"
                      | <TYPE> "->" <TYPE>
                      | <upper-var> <list-type>
                      | <lower-var>



<list-pattern-list> ::= "" | <pattern> | <pattern> "," <list-pattern-list>

<list-pattern-sort> ::= "" | <pattern> | <pattern> <list-pattern-list>

<list-pattern-vars> ::= "" | <lower-var> | <pattern> "," <list-pattern-vars>

<pattern>           ::= <bool>
                      | <int>
                      | "[" <list-pattern-list> "]"
                      | "(" <pattern> , <pattern> ")"
                      | <upper-var> <list-pattern-sort>
                      | <lower-var>
                      | <pattern> "as" <lower-var>
                      | "{" <list-pattern-vars> "}"
                      | <pattern> "::" <pattern>
                      | "-"



<list-exp-field>    ::= <lower-var> "=" <exp>
                      | <lower-var> "=" <exp> "," <list-exp-field>

<maybe-signature>   ::= "" | <lower-var> ":" <type> ";"

<list-case>         ::= <pattern> "->" <exp>
                      | <pattern> "->" <exp> ";" <list-case>

<bool>              ::= "True" | "False"

<int>               ::= "0" | "-1" | "1" | "-2" | "2" | ..

<list-exp>          ::= "" | <exp> | <exp> "," <list-exp> 

<exp>               ::= "foldl"
                      | "(::)"
                      | "(+)"
                      | "(-)"
                      | "(*)"
                      | "(//)"
                      | "(<)"
                      | "(==)"
                      | "not"
                      | "(&&)"
                      | "(||)"
                      | <exp> "|>" <exp>
                      | <exp> ">>" <exp>
                      | "if" <exp> "then" <exp> "else" <exp>
                      | "{" <list-exp-field> "}"
                      | "{}"
                      | "{" <lower-var> "|" <list-exp-field> }
                      | <lower-var> "." <lower-var>
                      | "let" <maybe-signature> <lower-var> "=" <exp> "in" <exp>
                      | "case" <exp> "of" "[" <list-case> "]"
                      | <exp> <exp>
                      | <bool>
                      | <int>
                      | "[" <list-exp> "]"
                      | "(" <exp> "," <exp> ")"
                      | "\" <pattern> "->" <exp>
                      | <upper-var>
                      | <lower-var>



<list-sort>         ::= <upper-var> <list-type> 
                      | <upper-var> <list-type> "|" <list-sort>

<list-statement>    ::= "" | <statement> ";" | <statement> ";" <list-statement>

<statement>         ::= <maybe-signature> <lower-var> "=" <exp>
                      | "type" "alias" <upper-var> <list-lower-var> "=" <type>
                      | "type" <upper-var> <list-lower-var> "=" <upper-var> <list-type>

<maybe-main-sign>   ::= "" | "main" ":" <type> ";"

<program>           ::= <list-statement> <maybe-main-sign> "main" "=" <exp>